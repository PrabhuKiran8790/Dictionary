{"version":3,"sources":["data/category.js","components/Header/Header.js","components/Definitions/Definitions.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["categories","value","label","Header","setCategory","category","word","setWord","lightmode","darkTheme","createTheme","palette","primary","main","type","className","href","ThemeProvider","theme","TextField","variant","onChange","e","target","select","language","map","option","MenuItem","Definitions","meanings","src","phonetics","audio","style","backgroundColor","borderRadius","controls","mean","item","definitions","def","color","definition","width","example","synonyms","s","App","useState","setMeanings","setLightmode","DarkMode","withStyles","root","height","padding","margin","spacing","switchBase","transform","common","white","opacity","border","thumb","track","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","dictionaryApi","display","borderColor","boxShadow","a","axios","get","data","console","log","useEffect","Container","maxWidth","flexDirection","justifyContent","position","top","right","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.8b28c588.chunk.js","sourcesContent":["const categories = [\r\n    { value: \"English\", label: \"en\" },\r\n    { value: \"Hindi\", label: \"hi\" },\r\n    { value: \"Spanish\", label: \"es\" },\r\n    { value: \"French\", label: \"fr\" },\r\n    { value: \"Japanese\", label: \"ja\" },\r\n    { value: \"Russian\", label: \"ru\" },\r\n    { value: \"German\", label: \"de\" },\r\n    { value: \"Italian\", label: \"it\" },\r\n    { value: \"Korean\", label: \"ko\" },\r\n    { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\r\n    { value: \"Arabic\", label: \"ar\" },\r\n    { value: \"Turkish\", label: \"tr\" },\r\n  ];\r\n  \r\n  export default categories;","import { createTheme,ThemeProvider, TextField, MenuItem } from '@material-ui/core';\r\nimport React from 'react'\r\nimport \"./Header.css\";\r\nimport categories from '../../data/category';\r\n\r\nconst Header = ({setCategory, category, word, setWord, lightmode}) => {\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary:{\r\n                main:lightmode?\"#000\":\"#fff\",\r\n            },\r\n          type:lightmode?'light':'dark',\r\n        },\r\n      });\r\n\r\n        const handleChange=(language)=>{\r\n            setCategory(language);\r\n            setWord(\"\");\r\n        }\r\n    return (\r\n        <div className=\"header\">\r\n            <span><br></br></span>\r\n            <span className=\"title\">{word?word:\"Dictionary\"}</span>\r\n            <span><sub>A React Project by <a href=\"https://www.github.com/Prabhukiran8790\"><u><b>Prabhu Kiran</b></u></a> </sub></span>\r\n            <span><br></br></span>\r\n            <div className='inputs'>\r\n                <ThemeProvider theme={darkTheme}>\r\n                    <TextField className=\"search\" label=\"Search for a Word\" \r\n                    variant=\"outlined\" \r\n                    value={word} \r\n                    onChange={(e)=>setWord(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                    className=\"select\"\r\n                    select\r\n                    label=\"Language\"\r\n                    value={category}\r\n                    onChange={(e)=>handleChange(e.target.value)}\r\n                    // helperText=\"Select the language\"\r\n                    variant=\"outlined\"\r\n                    >\r\n                            {\r\n                                categories.map((option)=>(\r\n                                    <MenuItem key = {option.label} value={option.label} >{option.value}</MenuItem>\r\n                                ))\r\n                            }\r\n                    </TextField>\r\n                </ThemeProvider>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { light } from '@material-ui/core/styles/createPalette';\r\nimport React from 'react';\r\nimport './Definitions.css';\r\n\r\nconst Definitions = ({word, category, meanings,lightmode }) => {\r\n    return(\r\n        <div className=\"meanings\">\r\n\r\n            {\r\n                meanings[0] && word && category === 'en' && (\r\n                    <audio src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio } \r\n                    style={{backgroundColor:'#fff', borderRadius:10}} \r\n                    controls\r\n                    >\r\n                        Your browser doesn't support Audio Element.\r\n                    </audio>\r\n                )\r\n            }\r\n\r\n            {word === \"\" ? (\r\n                <span className=\"subTitle\">Start by typing a word in search..</span>\r\n            ):(\r\n            meanings.map((mean) => \r\n             mean.meanings.map((item)=>\r\n                item.definitions.map((def)=>(\r\n                    <div \r\n                    className=\"singleMean\" \r\n                    style={{backgroundColor:lightmode?\"#3b5360\":\"white\", color:lightmode?\"white\":\"black\"}} \r\n                    >\r\n                        <b>{def.definition}</b>\r\n                        <hr style={{backgroundColor:\"black\", width:\"100%\"}} />\r\n                        {\r\n                            def.example && (\r\n                                <span>\r\n                                    <b>Example: </b>\r\n                                    {def.example}\r\n                                </span>\r\n                            )\r\n                        }\r\n                        {def.synonyms &&(\r\n                         <span>\r\n                            <b>Synonyms: </b>\r\n                            {def.synonyms.map((s)=>`${s}, `)}\r\n                         </span>\r\n                        )\r\n                        \r\n                        }\r\n                    </div>\r\n                ))\r\n            )\r\n        )\r\n          )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Definitions;\r\n","import axios from \"axios\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { Container, LinearProgress, Switch, withStyles } from \"@material-ui/core\";\nimport Header from \"./components/Header/Header\";\nimport Definitions from './components/Definitions/Definitions';\n\nfunction App() {\n  const [word, setWord] = useState()\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [lightmode, setLightmode] = useState(false)\n\n  const DarkMode = withStyles((theme) => ({\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1),\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#52d869',\n          opacity: 1,\n          border: 'none',\n        },\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff',\n      },\n    },\n    thumb: {\n      width: 24,\n      height: 24,\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: `1px solid ${theme.palette.grey[400]}`,\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n  }))(({ classes, ...props }) => {\n    return (\n      <Switch\n        focusVisibleClassName={classes.focusVisible}\n        disableRipple\n        classes={{\n          root: classes.root,\n          switchBase: classes.switchBase,\n          thumb: classes.thumb,\n          track: classes.track,\n          checked: classes.checked,\n        }}\n        {...props}\n      />\n    );\n  });\n  \n  const AntSwitch = withStyles((theme) => ({\n    root: {\n      width: 28,\n      height: 16,\n      padding: 0,\n      display: 'flex',\n    },\n    switchBase: {\n      padding: 2,\n      color: theme.palette.grey[500],\n      '&$checked': {\n        transform: 'translateX(12px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          opacity: 1,\n          backgroundColor: theme.palette.primary.main,\n          borderColor: theme.palette.primary.main,\n        },\n      },\n    },\n    thumb: {\n      width: 12,\n      height: 12,\n      boxShadow: 'none',\n    },\n    track: {\n      border: `1px solid ${theme.palette.grey[500]}`,\n      borderRadius: 16 / 2,\n      opacity: 1,\n      backgroundColor: theme.palette.common.white,\n    },\n    checked: {},\n  }))(Switch);\n  \n  const dictionaryApi= async()=> {\n    try {\n      const data = await axios.get(\n        `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\n      );\n\n      setMeanings(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // console.log(meanings);\n  useEffect(() => {\n    dictionaryApi();\n  }, [word, category])\n\n  return <div className=\"App\" \n  style={{\n    height:\"100vh\", \n    backgroundColor:lightmode?\"#fff\":\"#000000\", \n    color:lightmode?\"black\":\"white\",\n    transition:\"all 0.7s linear\"\n    }}>\n    <Container maxWidth = \"md\" style={{display:\"flex\", flexDirection:\"column\", height:\"100vh\", justifyContent:'space-evenly'}}>\n      <div style={{position: \"absolute\", top: 0, right:15, padding:10}}>\n        <span>{lightmode?\"Dark\":\"Light\"} Mode</span>\n        <DarkMode checked={lightmode} onChange={() => setLightmode(!lightmode)} />\n      </div>\n      <Header \n        category={category} \n        setCategory={setCategory} \n        word={word} \n        setWord={setWord}\n        lightmode = {lightmode} \n      />\n      {meanings && \n      (<Definitions word={word} meanings={meanings} category={category} />)}\n    </Container>\n  </div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}